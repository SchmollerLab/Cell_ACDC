# Custom ignores
figures
!cellacdc/resources/figures

env_dependencies_issues.txt
not_installed_requirements.txt
requirements_new.txt

# Starting from pip 21.3 setup.py is not needed anymore
# and we rely only on setup.cfg for env
setup.py
environment.yml
requirements.txt
conda_env_list_commands.txt

tweets
notebooks/testing.ipynb
notebooks/test.ipynb
notebooks/.ipynb_checkpoints
.idea/
test.txt
cellacdc/_version.py
cellacdc/test_qt_app.py
cellacdc/test_qthread.py
cellacdc/test.py
cellacdc/test1.py
cellacdc/test_segm.npy
cellacdc/deprecated
cellacdc/java
cellacdc/javabridge_cp37
cellacdc/javabridge_cp38
cellacdc/javabridge_linux
instructions/
benchmarks/
env/*
data/*
!data/placeholder.txt
!data/.placeholder.txt
mytests/
cellacdc/utils/deprecated
instructions/Screenshots
UserManual/*
!UserManual/Cell-ACDC_User_Manual.pdf

# Ignore models folder but keep the folder with placeholder.txt dummy file
models/*
!models/placeholder.txt
cellacdc/models/cellpose/model/*
cellacdc/models/YeaZ/model/*
cellacdc/models/YeastMate/model/*
cellacdc/models/StarDist/model/*

# Hide placeholder.txt dummy file (probably works only on Linux)
!models/.placeholder.txt
cellacdc/lastCommit.txt

# Ignore temp folder but keep the folder with placeholder.txt dummy file
cellacdc/temp/*
!cellacdc/temp/placeholder.txt
# Hide placeholder.txt dummy file (probably works only on Linux)
!cellacdc/temp/.placeholder.txt

# Ignore deprecated file
cellacdc/deprecated.py

# Ignore macOS files
.DS_Store

__pycache__/
*.pyc
setup_acdc.docx
setup_acdc.pdf

# Byte-compiled / optimized / DLL files
__pycache__/
/*.py[cod]
!cellacdc/javabridge/_javabridge.cp37-win_amd64.pyd
!cellacdc/javabridge/_javabridge.cp38-win_amd64.pyd
/*.dll

*$py.class

# C extensions
/*.so
!cellacdc/javabridge/_javabridge.cpython-38-x86_64-linux-gnu.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/
